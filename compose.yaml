services:
  backend:
    build: .
    container_name: 'cinema_backend'
    restart: 'always'
    ports:
      - "8080:8080"
    networks:
      - 'cinema-network'
    depends_on:
      - 'postgres'
      - 'mongodb'

  frontend:
    build: ./public
    container_name: 'cinema_frontend'
    restart: 'always'
    ports:
      - "8081:80"
    networks:
      - 'cinema-network'
    depends_on:
      - 'backend'

  postgres:
    image: 'postgres:latest'
    container_name: 'postgres_db'
    restart: 'always'
    environment:
      - 'POSTGRES_DB=mydb'
      - 'POSTGRES_PASSWORD=password'
      - 'POSTGRES_USER=postgres'
    ports:
      - '5432:5432'
    networks:
      - 'cinema-network'
    volumes:
      - 'postgres-data:/var/lib/postgresql/data'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: '10s'
      timeout: '5s'
      retries: 5

  mongodb:
    image: 'mongo:latest'
    container_name: 'mongo_db'
    restart: 'always'
    environment:
      - 'MONGO_INITDB_DATABASE=mydb'
      - 'MONGO_INITDB_ROOT_PASSWORD=password'
      - 'MONGO_INITDB_ROOT_USERNAME=root'
    ports:
      - '27017:27017'
    networks:
      - 'cinema-network'
    volumes:
      - 'mongodb-data:/data/db'
    healthcheck:
      test: [ "CMD-SHELL", "mongo --eval 'db.adminCommand(\"ping\")' || exit 1" ]
      interval: '10s'
      timeout: '5s'
      retries: 5

networks:
  cinema-network:

volumes:
  postgres-data:
  mongodb-data: